#!/bin/bash

export FABRIC_CFG_PATH=$PWD/compose/docker/peercfg/

CHAINCODE_NAME=basic
CHAINCODE_LABEL=basic_1.0
CHAINCODE_PATH=../../go-token/
CHAINCODE_LANG=golang
CHAINCODE_VERSION=1.0
CHANNEL_NAME=mychannel
SEQUENCE=1

rm -f ${CHAINCODE_LABEL}.tar.gz

peer lifecycle chaincode package ${CHAINCODE_LABEL}.tar.gz \
  --path ${CHAINCODE_PATH} --lang ${CHAINCODE_LANG} --label ${CHAINCODE_LABEL}

echo "üì¶ –ß–µ–π–Ω–∫–æ–¥ —É–ø–∞–∫–æ–≤–∞–Ω"


echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Org1..."
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=localhost:7051
peer lifecycle chaincode install ${CHAINCODE_LABEL}.tar.gz
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ Org1"

echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Org2..."
export CORE_PEER_LOCALMSPID="Org2MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
export CORE_PEER_ADDRESS=localhost:9051
peer lifecycle chaincode install ${CHAINCODE_LABEL}.tar.gz
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ Org2"

PACKAGE_ID=$(peer lifecycle chaincode queryinstalled | grep ${CHAINCODE_LABEL} | awk -F "[, ]+" '{print $3}')
echo "üì¶ Package ID: $PACKAGE_ID"

echo "–û–¥–æ–±—Ä–µ–Ω–∏–µ Org2"
peer lifecycle chaincode approveformyorg -o localhost:7050 \
--ordererTLSHostnameOverride orderer.example.com \
--channelID ${CHANNEL_NAME} --name ${CHAINCODE_NAME} \
--version ${CHAINCODE_VERSION} --package-id ${PACKAGE_ID} \
--sequence ${SEQUENCE} --tls \
--cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"
echo "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ Org2"

echo "–û–¥–æ–±—Ä–µ–Ω–∏–µ Org1"
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_ADDRESS=localhost:7051
peer lifecycle chaincode approveformyorg -o localhost:7050 \
--ordererTLSHostnameOverride orderer.example.com \
--channelID ${CHANNEL_NAME} --name ${CHAINCODE_NAME} \
--version ${CHAINCODE_VERSION} --package-id ${PACKAGE_ID} \
--sequence ${SEQUENCE} --tls \
--cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"
echo "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ Org1"

peer lifecycle chaincode checkcommitreadiness \
--channelID ${CHANNEL_NAME} --name ${CHAINCODE_NAME} \
--version ${CHAINCODE_VERSION} --sequence ${SEQUENCE} \
--tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" \
--output json

echo "–í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–º–∏—Ç..."
peer lifecycle chaincode commit -o localhost:7050 \
--ordererTLSHostnameOverride orderer.example.com --channelID ${CHANNEL_NAME} \
--name ${CHAINCODE_NAME} --version ${CHAINCODE_VERSION} --sequence ${SEQUENCE} \
--tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" \
--peerAddresses localhost:7051 \
--tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" \
--peerAddresses localhost:9051 \
--tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt"
echo "‚úÖ –ö–æ–º–º–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω"

peer lifecycle chaincode querycommitted \
--channelID ${CHANNEL_NAME} --name ${CHAINCODE_NAME} \
--cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"
echo "üéâ –ß–µ–π–Ω–∫–æ–¥ '${CHAINCODE_NAME}' —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω –Ω–∞ –∫–∞–Ω–∞–ª '${CHANNEL_NAME}'"